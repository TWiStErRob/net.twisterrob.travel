import net.twisterrob.travel.DirectoryArgumentProvider

plugins {
	id("net.twisterrob.blt.convention")
	id("org.gradle.application")
	id("net.twisterrob.gradle.plugin.java")
}

dependencies {
	implementation(projects.common.model)
	implementation(projects.common.data.desktop)
	implementation(projects.common.logConsole)
	runtimeOnly(projects.common.androidPolyfill)
	implementation(libs.jsr305)
}

application {
	mainClass = "net.twisterrob.blt.data.apps.DisplayLine"
}

tasks.named("run", JavaExec.class) {
	Directory timetableRoot = rootProject.layout.projectDirectory.dir("data/feed15/LULDLRRiverTramCable")
	Directory predictionRoot = rootProject.layout.projectDirectory.dir("data/PredictionSummary")
	// Use gradlew ...:run --args "Bakerloo Northern" to override.
	args = [ "DLR" ]
	argumentProviders.addAll([
			new DirectoryArgumentProvider(provider { timetableRoot }) {
				@InputDirectory
				@PathSensitive(PathSensitivity.RELATIVE)
				@Override Provider<Directory> getDirectory() {
					return super.getDirectory()
				}
			},
			new DirectoryArgumentProvider(provider { predictionRoot }) {
				@InputDirectory
				@PathSensitive(PathSensitivity.RELATIVE)
				@Override Provider<Directory> getDirectory() {
					return super.getDirectory()
				}
			},
	])
	enableAssertions = true
}
