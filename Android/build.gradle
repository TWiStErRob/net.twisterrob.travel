//name = 'Better London Travel Android App'
apply plugin: 'net.twisterrob.android-app'
apply plugin: 'com.android.application'

dependencies {
	implementation("net.twisterrob.lib:twister-lib-android-monolith")
	implementation("net.twisterrob.lib:twister-lib-android-basics")
	implementation("net.twisterrob.lib:twister-lib-android-slf4j")
	implementation("net.twisterrob.lib:twister-lib-android-widgets")
	implementation("net.twisterrob.lib:twister-lib-android-stringers")
	implementation("net.twisterrob.lib:twister-lib-android-about")
	implementation("net.twisterrob.lib:twister-lib-android-settings")

	implementation(project(':Shared')) {
		exclude module: 'android-polyfill'
	}
	implementation("com.google.android.gms:play-services-maps:${VERSION_MAPS}")
	implementation("com.google.android.gms:play-services-places:${VERSION_MAPS}")
	implementation("com.android.support:support-v4:${VERSION_SUPPORT}")
	implementation("com.android.support:appcompat-v7:${VERSION_SUPPORT}")
	implementation("com.android.support:design:${VERSION_SUPPORT}")
	implementation("com.github.bumptech.glide:glide:${VERSION_GLIDE}")

	apply from: "${rootDir}/gradle/testCompile.gradle", to: project
}

android {
	compileSdkVersion 28
	defaultConfig {
		targetSdkVersion 19
		applicationId 'net.twisterrob.blt'
		version {
			major = 1
		}
	}
	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
		}
		debug {
			// twister-lib-android only has release build type
			matchingFallbacks = ['release']
		}
	}
	lintOptions {
		checkAllWarnings = true
		checkDependencies = true
		lintConfig = file("lint.xml")
		baseline file("lint-baseline.xml")

	}
	flavorDimensions "app-build"
	productFlavors {
		full {
			// default
			dimension "app-build"
		}
		range {
			applicationId 'net.twisterrob.blt.range'
			dimension "app-build"
		}
	}
}

def generateDataBase = tasks.register("generateDataBase", Copy.class) {
	dependsOn(":Data:runNetwork", ":Data:runPostCode")
	from(new File(project(':Data').projectDir, 'output')) {
		include '*.data.*.sql'
	}
	into android.sourceSets.main.assets.srcDirs[0]
}
android.applicationVariants.all { com.android.build.gradle.api.ApplicationVariant variant ->
	variant.mergeAssetsProvider.configure { dependsOn(generateDataBase) }
}
