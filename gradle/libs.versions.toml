[versions]
java = "21"
java-android = "21"
java-appengine = "21"

agp = "8.13.0"
twisterrob = "0.18"
gretty = "4.1.10"
kotlin = "2.2.20"
kotlin-ksp = "2.2.20-2.0.4"
kotlin-datetime = "0.6.2"
kotlin-serialization = "1.9.0"

ktor = "3.3.1"

jsr305 = "3.0.2"
kxml2 = "2.3.0"

androidx-swiperefreshlayout = "1.1.0"
androidx-fragment = "1.8.9"
glide = "5.0.5"

slf4j = "2.0.17"
# https://logging.apache.org/log4j/2.x/release-notes.html
log4j  ="2.25.2"

google-cloud = "26.70.0"
# Run `gcloud components update` to get the new available version.
# (or `gcloud components update --version <version>` to revert)
# https://cloud.google.com/sdk/docs/release-notes
google-cloud-sdk = "542.0.0"
# https://cloud.google.com/appengine/docs/standard/java/release-notes
google-appengine = "2.0.39"
google-appengine-plugin = "2.8.3"
google-maps = "19.2.0"
google-places = "5.0.0"
google-guava-android = "33.5.0-jre"

micronaut = "4.9.4"
micronaut-gradle = "4.6.0"
snakeyaml = "2.5"

junit4 = "4.13.2"
junit5 = "6.0.0"
kotest = "6.0.4"
mockito = "5.20.0"
mockito-kotlin = "6.1.0"
# Use this instead of 1.3
# If `hamcrest-1.3` appears in the dependency list, check if it's excluded from all usages.
hamcrest = "2.0.0.0"
gwen = "1.0.2"
jtidy = "1.0.5"

[libraries]
plugin-agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
# https://github.com/GoogleCloudPlatform/app-gradle-plugin/blob/master/CHANGELOG.md
plugin-appengine = { module = "com.google.cloud.tools:appengine-gradle-plugin", version.ref = "google-appengine-plugin" }
plugin-twisterrob = { module = "net.twisterrob.gradle:twister-convention-plugins", version.ref = "twisterrob" }
plugin-gretty = { module = "org.gretty:gretty", version.ref = "gretty" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "kotlin-ksp" }

ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }

plugin-micronaut = { module = "io.micronaut.application:io.micronaut.application.gradle.plugin", version.ref = "micronaut-gradle" }
#noinspection unused versions.micronaut is used for micronaut { version = ... }, micronaut-platform is added here to help Renovate.
micronaut-platform = { module = "io.micronaut.platform:micronaut-platform", version.ref = "micronaut" }
micronaut-httpClient = { module = "io.micronaut:micronaut-http-client" }
micronaut-jackson = { module = "io.micronaut.serde:micronaut-serde-jackson" }
micronaut-handlebars = { module = "io.micronaut.views:micronaut-views-handlebars" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }

jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
kxml2 = { module = "net.sf.kxml:kxml2", version.ref = "kxml2" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidx-swiperefreshlayout" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
log4j-slf4j2 = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

google-cloud = { module = "com.google.cloud:libraries-bom", version.ref = "google-cloud" }
google-cloud-datastore = { module = "com.google.cloud:google-cloud-datastore" } # version is BOM managed.
google-cloud-secrets = { module = "com.google.cloud:google-cloud-secretmanager" } # version is BOM managed.
appengine-api = { module = "com.google.appengine:appengine-api-1.0-sdk", version.ref = "google-appengine" }
gms-places = { module = "com.google.android.libraries.places:places", version.ref = "google-places" }
gms-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "google-maps" }
google-guava-android = { module = "com.google.guava:guava", version.ref = "google-guava-android" }

test-junit4 = { module = "junit:junit", version.ref = "junit4" }
test-junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
test-junit5-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
test-junit5-launcher = { module = "org.junit.platform:junit-platform-launcher" }
test-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
test-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
test-mockito-junit5 = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
test-hamcrest = { module = "org.hamcrest:hamcrest-junit", version.ref = "hamcrest" }
test-gwen = { module = "com.shazam:gwen", version.ref = "gwen" }
jtidy = { module = "com.github.jtidy:jtidy", version.ref = "jtidy" }
