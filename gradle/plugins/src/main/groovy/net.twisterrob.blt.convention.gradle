pluginManager.withPlugin("org.gradle.java-base") {
	java.toolchain.languageVersion = libs.versions.java.asProvider().map(JavaLanguageVersion::of)

	tasks.withType(JavaCompile).configureEach {
		options.encoding = "UTF-8"
		options.compilerArgs += [
				"-Werror",
				"-Xmaxwarns", "1000",
				"-Xmaxerrs", "1000",
				"-Xlint:all",
				"-Xlint:-processing",
		]
	}
}

pluginManager.withPlugin("org.gradle.java") {
	testing.suites.named("test", org.gradle.api.plugins.jvm.JvmTestSuite).configure { useJUnitJupiter() }
}

pluginManager.withPlugin("org.jetbrains.kotlin.jvm") {
	kotlin {
		jvmToolchain {
			languageVersion = libs.versions.java.asProvider().map(JavaLanguageVersion::of)
		}
		compilerOptions {
			allWarningsAsErrors = true // fail on warnings
			extraWarnings = true // enable all possible checks
			freeCompilerArgs.addAll(
				// Opt in to https://youtrack.jetbrains.com/issue/KT-59109 for now to see how to suppress warnings/errors.
				"-Xrender-internal-diagnostic-names",
			)
		}
	}
}

pluginManager.withPlugin("com.android.base") {
	pluginManager.withPlugin("org.gradle.java-base") {
		java.toolchain.languageVersion = libs.versions.java.android.map(JavaLanguageVersion::of)
	}
	pluginManager.withPlugin("org.jetbrains.kotlin.jvm") {
		kotlin {
			jvmToolchain {
				languageVersion = libs.versions.java.android.map(JavaLanguageVersion::of)
			}
		}
	}
}

pluginManager.withPlugin("com.android.lint") {
	lint {
		checkAllWarnings = true
		warningsAsErrors = true
		lintConfig = rootProject.file("config/lint/lint.xml")
		baseline = rootProject.file("config/lint/lint-baseline${project.path.replace(":", "-")}.xml")
		enable += "StopShip"
	}
}
