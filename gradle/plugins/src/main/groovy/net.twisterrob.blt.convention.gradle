pluginManager.withPlugin("org.gradle.java-base") {
	java.toolchain.languageVersion = JavaLanguageVersion.of(libs.versions.java.asProvider().get())

	tasks.withType(JavaCompile).configureEach {
		options.encoding = "UTF-8"
		options.compilerArgs += [
				"-Werror",
				"-Xmaxwarns", "1000",
				"-Xmaxerrs", "1000",
				"-Xlint:all",
				"-Xlint:-processing",
		]
		pluginManager.withPlugin("com.android.base") {
			options.compilerArgs += [
				// TODEL Workaround for https://issuetracker.google.com/issues/359561906, remove when android-35 v3 is released.
				"-Xlint:-classfile",
			]
		}
	}
}

pluginManager.withPlugin("org.gradle.java") {
	testing.suites.named("test", org.gradle.api.plugins.jvm.JvmTestSuite).configure { useJUnitJupiter() }
}

pluginManager.withPlugin("org.jetbrains.kotlin.jvm") {
	kotlin.jvmToolchain { languageVersion = JavaLanguageVersion.of(libs.versions.java.asProvider().get()) }
}

pluginManager.withPlugin("com.android.base") {
	pluginManager.withPlugin("org.gradle.java-base") {
		java.toolchain.languageVersion = JavaLanguageVersion.of(libs.versions.java.android.get())
	}
	pluginManager.withPlugin("org.jetbrains.kotlin.jvm") {
		kotlin.jvmToolchain { languageVersion = JavaLanguageVersion.of(libs.versions.java.android.get()) }
	}
}

pluginManager.withPlugin("com.android.lint") {
	lint {
		checkAllWarnings = true
		warningsAsErrors = true
		lintConfig = rootProject.file("config/lint/lint.xml")
		baseline = rootProject.file("config/lint/lint-baseline${project.path.replace(":", "-")}.xml")
		enable += "StopShip"
	}
}
