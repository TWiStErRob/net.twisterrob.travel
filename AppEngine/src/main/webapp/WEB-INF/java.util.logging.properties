# A default java.util.logging configuration. (All App Engine logging is through java.util.logging by default).
# To use this configuration, WEB-INF/appengine-web.xml references this file (java.util.logging.config.file system property).

# Set the default logging level for all loggers to WARNING
# See possible levels at java.util.logging.Level:
# http://docs.oracle.com/javase/6/docs/api/java/util/logging/Level.html
# OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL 
.level=ALL
net.twisterrob.level=ALL

# FINER Exception getting module instance @ (DevAppServerModulesFilter.java:212)
# com.google.appengine.api.labs.modules.ModulesException: No valid instance id for this instance.
#com.google.appengine.tools.development.DevAppServerModulesFilter.level = CONFIG
# Route JDK JUL logging through SLF4J to Log4J
# JUL config enables full logging and sets up a bridge that handles JUL -> SLF4J routing
# LogJ4 config receives all logs and filters them according to the configuration
# App uses SLF4J so that just directly routes to Log4J in DEV and JUL in PROD
# PROD routes app's SLF4J to JUL through Gradle compile dependency which is ignored in DEV.
# For this to work the following jars must be on the bootstrap classpath in DEV
# (edit launch configuration classpath):
#     * jul-to-slf4j
#     * slf4j-api
#     * slf4j-log4j12
#     * log4j
# For example in IntelliJ IDEA, edit the Run Configurations and add these VM options:
# -Xbootclasspath/p:P:\caches\gradle\caches\modules-2\files-2.1\org.slf4j\jul-to-slf4j\1.7.21\2f22c882ffa479d1e9ff4eb0e8e2c29f2a0871ed\jul-to-slf4j-1.7.21.jar
# -Xbootclasspath/p:P:\caches\gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-api\1.7.21\139535a69a4239db087de9bab0bee568bf8e0b70\slf4j-api-1.7.21.jar
# -Xbootclasspath/p:P:\caches\gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-log4j12\1.7.21\7238b064d1aba20da2ac03217d700d91e02460fa\slf4j-log4j12-1.7.21.jar
# -Xbootclasspath/p:P:\caches\gradle\caches\modules-2\files-2.1\log4j\log4j\1.2.17\5af35056b4d257e4b64b9e8069c0746e8b08629f\log4j-1.2.17.jar

# otherwise you'll get the following error:
# Can't load log handler "org.slf4j.bridge.SLF4JBridgeHandler"
# java.lang.ClassNotFoundException: org.slf4j.bridge.SLF4JBridgeHandler
handlers=org.slf4j.bridge.SLF4JBridgeHandler
