# To use this configuration, deploy it into your application's WEB-INF/classes directory.
# And provide -Dlog4j.configuration=WEB-INF\classes\log4j-debug.properties to the JVM

# org.slf4j.bridge.SLF4JBridgeHandler is registered in src/main/webapp/WEB-INF/java.util.logging.properties
# Bridge/route all JUL log records to the SLF4J API.
# J.U.L.  -> Log4J
# ALL     -> ALL
# FINEST  -> TRACE
# FINER   -> DEBUG
# FINE    -> DEBUG
# INFO    -> INFO
# WARNING -> WARN
# SEVERE  -> ERROR
#         -> FATAL
#         -> OFF

log4j.rootLogger=ALL, console

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c(%F:%L) %m%n

# tighten spamming logs
# DEBUG/startup GAE Development server logs about all loaded files (jar, tld, ...)
# INFO/startup Jetty version info and binding
log4j.category.JettyLogger(null)=WARN
# TRACE/startup GAE Development server determines that it's a dev server:
# https://code.google.com/p/googleappengine/issues/detail?id=10412
#      com.google.appengine.tools.development.DevAppServerModulesFilter(DevAppServerModulesFilter.java:210) Ignoring Exception getting module instance and continuing
#      com.google.appengine.api.modules.ModulesException: Instance id unavailable
#          at com.google.appengine.api.modules.ModulesServiceImpl.getCurrentInstanceId(ModulesServiceImpl.java:77)
log4j.category.com.google.appengine.tools.development.DevAppServerModulesFilter=DEBUG
# DEBUG/startup GAE Development server requests backend config
#     com.google.appengine.tools.development.AbstractBackendServers(AbstractBackendServers.java:194) Got null backendsXml config.
log4j.category.com.google.appengine.tools.development.AbstractBackendServers=INFO
# TRACE/startup protobuf feature detection results
log4j.category.com.google.appengine.repackaged.com.google.protobuf=DEBUG

# INFO Jersey Application startup (Root Resource Classes, Global Reader Interceptors, Global Writer Interceptors, Message Body Readers, Message Body Writers)
#log4j.category.org.glassfish.jersey.server.ApplicationHandler=WARN
# TRACE A new abstract resource created by IntrospectionModeler: org.glassfish.jersey.server.model.Resource$Builder@13bd913
#log4j.category.org.glassfish.jersey.server.model.IntrospectionModeller=DEBUG
# To determine "Running in a non-OSGi environment" it logs an exception:
# DEBUG Unable to load class org.osgi.framework.BundleReference using the current class loader. java.lang.ClassNotFoundException: org.osgi.framework.BundleReference
#log4j.category.org.glassfish.jersey.internal.util.ReflectionHelper=INFO
# DEBUG Unable to get the $Proxy17 annotation value property java.lang.NoSuchMethodException: javax.inject.Inject.value()
#log4j.category.org.glassfish.jersey.server.model.Parameter=INFO
# TRACE Loading next object: org.glassfish.jersey.*AutoDiscoverable
#log4j.category.org.glassfish.jersey.internal.ServiceFinder=DEBUG

# DEBUG Rolled forward 1 of 1 jobs for Element {...}
#log4j.category.com.google.appengine.api.datastore.dev.LocalDatastoreService=INFO
# DEBUG/request JSP compiler: JSP request logs
log4j.category.org.apache.jasper.servlet.JspServlet=INFO
# DEBUG/request JSP compiler: JSP compilation logs (deleting, generated, compiled in time)
log4j.category.org.apache.jasper.compiler.Compiler=INFO
# DEBUG/request JSP compiler: statement level code generation logs
#     constant pool count: 673
#     16 read class attr -- '_005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest'
log4j.category.org.apache.jasper.compiler.SmapUtil$SDEInstaller=INFO
# DEBUG/request JSP compiler: class loaders and classpath
log4j.category.org.apache.jasper.compiler.JspRuntimeContext=INFO

# DEBUG/request authentication internals
#     authenticate() returning new principal for test@example.com
#     Ignoring disassociate call for: test@example.com
log4j.category.com.google.apphosting.utils.jetty.AppEngineAuthentication=INFO
# DEBUG/request full logging of what goes over the wire (headers, content, etc).
#     com.google.appengine.repackaged.org.apache.http.wire(Wire.java:63) >> "GET /TrackerNet/LineStatus HTTP/1.1[\r][\n]"
#     com.google.appengine.repackaged.org.apache.http.wire(Wire.java:63) << "HTTP/1.1 200 OK[\r][\n]"
log4j.category.com.google.appengine.repackaged.org.apache.http=INFO
# DEBUG mail capabilities and handlers resolution
log4j.category.javax.activation=INFO

# Application specific logs
log4j.category.net.twisterrob=ALL
