apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
	provided
}
idea {
	module {
		scopes.PROVIDED.plus += [ configurations.provided ]
	}
}

dependencies {
	// com.google.appengine.api.datastore
	compile "com.google.appengine:appengine-api-1.0-sdk:${VERSION_APPENGINE}"
	// com.google.api.server.spi.SystemServiceServlet
	compile "com.google.appengine:appengine-endpoints:${VERSION_APPENGINE}"

	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	provided "org.apache.taglibs:taglibs-standard-impl:1.2.5" // DEV only
	provided "javax.servlet.jsp.jstl:jstl-api:1.2" // DEV only

	compile project(':Shared')

	// See java.util.logging.properties and log4j2.xml
	compile "org.slf4j:slf4j-api:${VERSION_SLF4J}"
	compile "org.slf4j:slf4j-jdk14:${VERSION_SLF4J}" // route apps SLF4J logging to JUL
	provided "org.slf4j:jul-to-slf4j:${VERSION_SLF4J}" // DEV only
	provided "org.apache.logging.log4j:log4j-api:${VERSION_LOG4J}" // DEV only
	provided "org.apache.logging.log4j:log4j-core:${VERSION_LOG4J}" // DEV only
	provided "org.apache.logging.log4j:log4j-slf4j-impl:${VERSION_LOG4J}" // DEV only

	compile "ant:ant:1.6.5" // for org.apache.tools.ant.filters.StringInputStream
//	compile "com.google.guava:guava:14.0.1"
//	compile "joda-time:joda-time:2.3"

	apply from: "${rootDir}/gradle/testCompile.gradle", to: project
//	testCompile "com.google.appengine:appengine-testing:${VERSION_APPENGINE}"
//	testCompile "com.google.appengine:appengine-api-stubs:${VERSION_APPENGINE}"
//	testCompile "com.google.appengine:appengine-api-labs:${VERSION_APPENGINE}"
}

sourceSets {
	main {
		java.srcDir 'src/main/diff'
		compileClasspath += configurations.provided
	}
	test {
		java.srcDir 'src/test/diff'
		compileClasspath += configurations.provided
	}
}

appengine { com.google.cloud.tools.gradle.appengine.standard.AppEngineStandardExtension ext ->
	deploy {
		projectId = 'twisterrob-london'
	}
	run {
		port = 8888
		automaticRestart = true

		def logDependencyFilter = { Dependency d -> d.group?.contains('slf4j') || d.group?.contains('log4j') };
		def deps = configurations.provided.dependencies.findAll logDependencyFilter;
		def flags = configurations.provided.files(deps as Dependency[]).collect { "-Xbootclasspath/p:${it.absolutePath}".toString() }
		jvmFlags = (jvmFlags ?: []) + flags
	}
	tools {
		cloudSdkHome = System.getenv("GCLOUD_HOME") ?: file("build/downloaded/gcloud-sdk")
		cloudSdkVersion = "286.0.0"
	}
}
