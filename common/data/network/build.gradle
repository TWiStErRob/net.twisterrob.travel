import net.twisterrob.travel.InputDirectoryArgumentProvider
import net.twisterrob.travel.JavaExecExtensions
import net.twisterrob.travel.OutputDirectoryArgumentProvider

plugins {
	id("net.twisterrob.blt.convention")
	id("org.gradle.application")
	id("net.twisterrob.gradle.plugin.java")
}

dependencies {
	implementation(projects.common.model)
	implementation(projects.common.data.desktop)
	implementation(projects.common.logConsole)

	runtimeOnly(projects.common.androidPolyfill)
}

application {
	mainClass = "net.twisterrob.blt.data.apps.TravelNetworkParser"
}

tasks.named("run", JavaExec.class) {
	Directory inputDir = rootProject.layout.projectDirectory.dir("temp/feed15/LULDLRRiverTramCable")
	Provider<Directory> outputDir = layout.buildDirectory.dir("output")
	inputs.dir(inputDir).withPathSensitivity(PathSensitivity.RELATIVE)
	inputs.dir(rootProject.layout.projectDirectory.dir("data/PredictionSummary")) // STOPSHIP
	argumentProviders.addAll([
			new InputDirectoryArgumentProvider(provider { inputDir }),
			new OutputDirectoryArgumentProvider(outputDir),
	])
	enableAssertions = true
	JavaExecExtensions.logTo(it, outputDir.map { it.file("run.log") })
}

configurations.create("output")
artifacts.output(tasks.named("run").map { it.outputs.files.singleFile })
